/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.tables.records.SimpleFeatureRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SimpleFeature extends TableImpl<SimpleFeatureRecord> {

    private static final long serialVersionUID = -1031610798;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.simple_feature</code>
     */
    public static final SimpleFeature SIMPLE_FEATURE = new SimpleFeature();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SimpleFeatureRecord> getRecordType() {
        return SimpleFeatureRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.simple_feature.simple_feature_id</code>.
     */
    public final TableField<SimpleFeatureRecord, UInteger> SIMPLE_FEATURE_ID = createField("simple_feature_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.simple_feature.seq_region_id</code>.
     */
    public final TableField<SimpleFeatureRecord, UInteger> SEQ_REGION_ID = createField("seq_region_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.simple_feature.seq_region_start</code>.
     */
    public final TableField<SimpleFeatureRecord, UInteger> SEQ_REGION_START = createField("seq_region_start", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.simple_feature.seq_region_end</code>.
     */
    public final TableField<SimpleFeatureRecord, UInteger> SEQ_REGION_END = createField("seq_region_end", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.simple_feature.seq_region_strand</code>.
     */
    public final TableField<SimpleFeatureRecord, Byte> SEQ_REGION_STRAND = createField("seq_region_strand", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.simple_feature.display_label</code>.
     */
    public final TableField<SimpleFeatureRecord, String> DISPLAY_LABEL = createField("display_label", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.simple_feature.analysis_id</code>.
     */
    public final TableField<SimpleFeatureRecord, UShort> ANALYSIS_ID = createField("analysis_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.simple_feature.score</code>.
     */
    public final TableField<SimpleFeatureRecord, Double> SCORE = createField("score", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.simple_feature</code> table reference
     */
    public SimpleFeature() {
        this("simple_feature", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.simple_feature</code> table reference
     */
    public SimpleFeature(String alias) {
        this(alias, SIMPLE_FEATURE);
    }

    private SimpleFeature(String alias, Table<SimpleFeatureRecord> aliased) {
        this(alias, aliased, null);
    }

    private SimpleFeature(String alias, Table<SimpleFeatureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SimpleFeatureRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_SIMPLE_FEATURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SimpleFeatureRecord> getPrimaryKey() {
        return Keys.KEY_SIMPLE_FEATURE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SimpleFeatureRecord>> getKeys() {
        return Arrays.<UniqueKey<SimpleFeatureRecord>>asList(Keys.KEY_SIMPLE_FEATURE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SimpleFeature as(String alias) {
        return new SimpleFeature(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SimpleFeature rename(String name) {
        return new SimpleFeature(name, null);
    }
}
