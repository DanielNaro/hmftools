/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.enums.IntronSupportingEvidenceScoreType;
import org.ensembl.database.homo_sapiens_core.tables.records.IntronSupportingEvidenceRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IntronSupportingEvidence extends TableImpl<IntronSupportingEvidenceRecord> {

    private static final long serialVersionUID = 1759069907;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.intron_supporting_evidence</code>
     */
    public static final IntronSupportingEvidence INTRON_SUPPORTING_EVIDENCE = new IntronSupportingEvidence();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IntronSupportingEvidenceRecord> getRecordType() {
        return IntronSupportingEvidenceRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.intron_supporting_evidence_id</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, UInteger> INTRON_SUPPORTING_EVIDENCE_ID = createField("intron_supporting_evidence_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.analysis_id</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, UShort> ANALYSIS_ID = createField("analysis_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.seq_region_id</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, UInteger> SEQ_REGION_ID = createField("seq_region_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.seq_region_start</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, UInteger> SEQ_REGION_START = createField("seq_region_start", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.seq_region_end</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, UInteger> SEQ_REGION_END = createField("seq_region_end", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.seq_region_strand</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, Byte> SEQ_REGION_STRAND = createField("seq_region_strand", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.hit_name</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, String> HIT_NAME = createField("hit_name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.score</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, BigDecimal> SCORE = createField("score", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 3), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.score_type</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, IntronSupportingEvidenceScoreType> SCORE_TYPE = createField("score_type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.ensembl.database.homo_sapiens_core.enums.IntronSupportingEvidenceScoreType.class), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.intron_supporting_evidence.is_splice_canonical</code>.
     */
    public final TableField<IntronSupportingEvidenceRecord, Byte> IS_SPLICE_CANONICAL = createField("is_splice_canonical", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.intron_supporting_evidence</code> table reference
     */
    public IntronSupportingEvidence() {
        this("intron_supporting_evidence", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.intron_supporting_evidence</code> table reference
     */
    public IntronSupportingEvidence(String alias) {
        this(alias, INTRON_SUPPORTING_EVIDENCE);
    }

    private IntronSupportingEvidence(String alias, Table<IntronSupportingEvidenceRecord> aliased) {
        this(alias, aliased, null);
    }

    private IntronSupportingEvidence(String alias, Table<IntronSupportingEvidenceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IntronSupportingEvidenceRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_INTRON_SUPPORTING_EVIDENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IntronSupportingEvidenceRecord> getPrimaryKey() {
        return Keys.KEY_INTRON_SUPPORTING_EVIDENCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IntronSupportingEvidenceRecord>> getKeys() {
        return Arrays.<UniqueKey<IntronSupportingEvidenceRecord>>asList(Keys.KEY_INTRON_SUPPORTING_EVIDENCE_PRIMARY, Keys.KEY_INTRON_SUPPORTING_EVIDENCE_ANALYSIS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IntronSupportingEvidence as(String alias) {
        return new IntronSupportingEvidence(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IntronSupportingEvidence rename(String name) {
        return new IntronSupportingEvidence(name, null);
    }
}
