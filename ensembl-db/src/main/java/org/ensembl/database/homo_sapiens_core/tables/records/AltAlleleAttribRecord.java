/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables.records;


import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.enums.AltAlleleAttribAttrib;
import org.ensembl.database.homo_sapiens_core.tables.AltAlleleAttrib;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AltAlleleAttribRecord extends TableRecordImpl<AltAlleleAttribRecord> implements Record2<UInteger, AltAlleleAttribAttrib> {

    private static final long serialVersionUID = 995689639;

    /**
     * Setter for <code>homo_sapiens_core_89_37.alt_allele_attrib.alt_allele_id</code>.
     */
    public void setAltAlleleId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.alt_allele_attrib.alt_allele_id</code>.
     */
    public UInteger getAltAlleleId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.alt_allele_attrib.attrib</code>.
     */
    public void setAttrib(AltAlleleAttribAttrib value) {
        set(1, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.alt_allele_attrib.attrib</code>.
     */
    public AltAlleleAttribAttrib getAttrib() {
        return (AltAlleleAttribAttrib) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, AltAlleleAttribAttrib> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, AltAlleleAttribAttrib> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return AltAlleleAttrib.ALT_ALLELE_ATTRIB.ALT_ALLELE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<AltAlleleAttribAttrib> field2() {
        return AltAlleleAttrib.ALT_ALLELE_ATTRIB.ATTRIB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getAltAlleleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AltAlleleAttribAttrib value2() {
        return getAttrib();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AltAlleleAttribRecord value1(UInteger value) {
        setAltAlleleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AltAlleleAttribRecord value2(AltAlleleAttribAttrib value) {
        setAttrib(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AltAlleleAttribRecord values(UInteger value1, AltAlleleAttribAttrib value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AltAlleleAttribRecord
     */
    public AltAlleleAttribRecord() {
        super(AltAlleleAttrib.ALT_ALLELE_ATTRIB);
    }

    /**
     * Create a detached, initialised AltAlleleAttribRecord
     */
    public AltAlleleAttribRecord(UInteger altAlleleId, AltAlleleAttribAttrib attrib) {
        super(AltAlleleAttrib.ALT_ALLELE_ATTRIB);

        set(0, altAlleleId);
        set(1, attrib);
    }
}
