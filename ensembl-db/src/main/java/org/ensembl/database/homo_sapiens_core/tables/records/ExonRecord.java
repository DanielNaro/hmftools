/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.tables.Exon;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExonRecord extends UpdatableRecordImpl<ExonRecord> implements Record13<UInteger, UInteger, UInteger, UInteger, Byte, Byte, Byte, Byte, Byte, String, UShort, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1912536418;

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.exon_id</code>.
     */
    public void setExonId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.exon_id</code>.
     */
    public UInteger getExonId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.seq_region_id</code>.
     */
    public void setSeqRegionId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.seq_region_id</code>.
     */
    public UInteger getSeqRegionId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.seq_region_start</code>.
     */
    public void setSeqRegionStart(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.seq_region_start</code>.
     */
    public UInteger getSeqRegionStart() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.seq_region_end</code>.
     */
    public void setSeqRegionEnd(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.seq_region_end</code>.
     */
    public UInteger getSeqRegionEnd() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.seq_region_strand</code>.
     */
    public void setSeqRegionStrand(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.seq_region_strand</code>.
     */
    public Byte getSeqRegionStrand() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.phase</code>.
     */
    public void setPhase(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.phase</code>.
     */
    public Byte getPhase() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.end_phase</code>.
     */
    public void setEndPhase(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.end_phase</code>.
     */
    public Byte getEndPhase() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.is_current</code>.
     */
    public void setIsCurrent(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.is_current</code>.
     */
    public Byte getIsCurrent() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.is_constitutive</code>.
     */
    public void setIsConstitutive(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.is_constitutive</code>.
     */
    public Byte getIsConstitutive() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.stable_id</code>.
     */
    public void setStableId(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.stable_id</code>.
     */
    public String getStableId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.version</code>.
     */
    public void setVersion(UShort value) {
        set(10, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.version</code>.
     */
    public UShort getVersion() {
        return (UShort) get(10);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.created_date</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.created_date</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.exon.modified_date</code>.
     */
    public void setModifiedDate(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.exon.modified_date</code>.
     */
    public Timestamp getModifiedDate() {
        return (Timestamp) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<UInteger, UInteger, UInteger, UInteger, Byte, Byte, Byte, Byte, Byte, String, UShort, Timestamp, Timestamp> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<UInteger, UInteger, UInteger, UInteger, Byte, Byte, Byte, Byte, Byte, String, UShort, Timestamp, Timestamp> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Exon.EXON.EXON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Exon.EXON.SEQ_REGION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field3() {
        return Exon.EXON.SEQ_REGION_START;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return Exon.EXON.SEQ_REGION_END;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return Exon.EXON.SEQ_REGION_STRAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return Exon.EXON.PHASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return Exon.EXON.END_PHASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return Exon.EXON.IS_CURRENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return Exon.EXON.IS_CONSTITUTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Exon.EXON.STABLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UShort> field11() {
        return Exon.EXON.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return Exon.EXON.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field13() {
        return Exon.EXON.MODIFIED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getExonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getSeqRegionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value3() {
        return getSeqRegionStart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getSeqRegionEnd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getSeqRegionStrand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getPhase();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getEndPhase();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getIsCurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getIsConstitutive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getStableId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UShort value11() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value13() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value1(UInteger value) {
        setExonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value2(UInteger value) {
        setSeqRegionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value3(UInteger value) {
        setSeqRegionStart(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value4(UInteger value) {
        setSeqRegionEnd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value5(Byte value) {
        setSeqRegionStrand(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value6(Byte value) {
        setPhase(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value7(Byte value) {
        setEndPhase(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value8(Byte value) {
        setIsCurrent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value9(Byte value) {
        setIsConstitutive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value10(String value) {
        setStableId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value11(UShort value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value12(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord value13(Timestamp value) {
        setModifiedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonRecord values(UInteger value1, UInteger value2, UInteger value3, UInteger value4, Byte value5, Byte value6, Byte value7, Byte value8, Byte value9, String value10, UShort value11, Timestamp value12, Timestamp value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExonRecord
     */
    public ExonRecord() {
        super(Exon.EXON);
    }

    /**
     * Create a detached, initialised ExonRecord
     */
    public ExonRecord(UInteger exonId, UInteger seqRegionId, UInteger seqRegionStart, UInteger seqRegionEnd, Byte seqRegionStrand, Byte phase, Byte endPhase, Byte isCurrent, Byte isConstitutive, String stableId, UShort version, Timestamp createdDate, Timestamp modifiedDate) {
        super(Exon.EXON);

        set(0, exonId);
        set(1, seqRegionId);
        set(2, seqRegionStart);
        set(3, seqRegionEnd);
        set(4, seqRegionStrand);
        set(5, phase);
        set(6, endPhase);
        set(7, isCurrent);
        set(8, isConstitutive);
        set(9, stableId);
        set(10, version);
        set(11, createdDate);
        set(12, modifiedDate);
    }
}
