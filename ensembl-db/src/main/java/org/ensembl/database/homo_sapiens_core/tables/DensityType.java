/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.enums.DensityTypeValueType;
import org.ensembl.database.homo_sapiens_core.tables.records.DensityTypeRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DensityType extends TableImpl<DensityTypeRecord> {

    private static final long serialVersionUID = -717410410;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.density_type</code>
     */
    public static final DensityType DENSITY_TYPE = new DensityType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DensityTypeRecord> getRecordType() {
        return DensityTypeRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.density_type.density_type_id</code>.
     */
    public final TableField<DensityTypeRecord, UInteger> DENSITY_TYPE_ID = createField("density_type_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.density_type.analysis_id</code>.
     */
    public final TableField<DensityTypeRecord, UShort> ANALYSIS_ID = createField("analysis_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.density_type.block_size</code>.
     */
    public final TableField<DensityTypeRecord, Integer> BLOCK_SIZE = createField("block_size", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.density_type.region_features</code>.
     */
    public final TableField<DensityTypeRecord, Integer> REGION_FEATURES = createField("region_features", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.density_type.value_type</code>.
     */
    public final TableField<DensityTypeRecord, DensityTypeValueType> VALUE_TYPE = createField("value_type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.ensembl.database.homo_sapiens_core.enums.DensityTypeValueType.class), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.density_type</code> table reference
     */
    public DensityType() {
        this("density_type", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.density_type</code> table reference
     */
    public DensityType(String alias) {
        this(alias, DENSITY_TYPE);
    }

    private DensityType(String alias, Table<DensityTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private DensityType(String alias, Table<DensityTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DensityTypeRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_DENSITY_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DensityTypeRecord> getPrimaryKey() {
        return Keys.KEY_DENSITY_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DensityTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<DensityTypeRecord>>asList(Keys.KEY_DENSITY_TYPE_PRIMARY, Keys.KEY_DENSITY_TYPE_ANALYSIS_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DensityType as(String alias) {
        return new DensityType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DensityType rename(String name) {
        return new DensityType(name, null);
    }
}
