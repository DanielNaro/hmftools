/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.enums.SupportingFeatureFeatureType;
import org.ensembl.database.homo_sapiens_core.tables.records.SupportingFeatureRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SupportingFeature extends TableImpl<SupportingFeatureRecord> {

    private static final long serialVersionUID = 928984510;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.supporting_feature</code>
     */
    public static final SupportingFeature SUPPORTING_FEATURE = new SupportingFeature();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SupportingFeatureRecord> getRecordType() {
        return SupportingFeatureRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.supporting_feature.exon_id</code>.
     */
    public final TableField<SupportingFeatureRecord, UInteger> EXON_ID = createField("exon_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.supporting_feature.feature_type</code>.
     */
    public final TableField<SupportingFeatureRecord, SupportingFeatureFeatureType> FEATURE_TYPE = createField("feature_type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.ensembl.database.homo_sapiens_core.enums.SupportingFeatureFeatureType.class), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.supporting_feature.feature_id</code>.
     */
    public final TableField<SupportingFeatureRecord, UInteger> FEATURE_ID = createField("feature_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.supporting_feature</code> table reference
     */
    public SupportingFeature() {
        this("supporting_feature", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.supporting_feature</code> table reference
     */
    public SupportingFeature(String alias) {
        this(alias, SUPPORTING_FEATURE);
    }

    private SupportingFeature(String alias, Table<SupportingFeatureRecord> aliased) {
        this(alias, aliased, null);
    }

    private SupportingFeature(String alias, Table<SupportingFeatureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SupportingFeatureRecord>> getKeys() {
        return Arrays.<UniqueKey<SupportingFeatureRecord>>asList(Keys.KEY_SUPPORTING_FEATURE_ALL_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SupportingFeature as(String alias) {
        return new SupportingFeature(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SupportingFeature rename(String name) {
        return new SupportingFeature(name, null);
    }
}
