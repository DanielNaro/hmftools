/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.tables.records.MiscFeatureRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MiscFeature extends TableImpl<MiscFeatureRecord> {

    private static final long serialVersionUID = -943672704;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.misc_feature</code>
     */
    public static final MiscFeature MISC_FEATURE = new MiscFeature();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MiscFeatureRecord> getRecordType() {
        return MiscFeatureRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.misc_feature.misc_feature_id</code>.
     */
    public final TableField<MiscFeatureRecord, UInteger> MISC_FEATURE_ID = createField("misc_feature_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.misc_feature.seq_region_id</code>.
     */
    public final TableField<MiscFeatureRecord, UInteger> SEQ_REGION_ID = createField("seq_region_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.misc_feature.seq_region_start</code>.
     */
    public final TableField<MiscFeatureRecord, UInteger> SEQ_REGION_START = createField("seq_region_start", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.misc_feature.seq_region_end</code>.
     */
    public final TableField<MiscFeatureRecord, UInteger> SEQ_REGION_END = createField("seq_region_end", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.misc_feature.seq_region_strand</code>.
     */
    public final TableField<MiscFeatureRecord, Byte> SEQ_REGION_STRAND = createField("seq_region_strand", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.misc_feature</code> table reference
     */
    public MiscFeature() {
        this("misc_feature", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.misc_feature</code> table reference
     */
    public MiscFeature(String alias) {
        this(alias, MISC_FEATURE);
    }

    private MiscFeature(String alias, Table<MiscFeatureRecord> aliased) {
        this(alias, aliased, null);
    }

    private MiscFeature(String alias, Table<MiscFeatureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MiscFeatureRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_MISC_FEATURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MiscFeatureRecord> getPrimaryKey() {
        return Keys.KEY_MISC_FEATURE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MiscFeatureRecord>> getKeys() {
        return Arrays.<UniqueKey<MiscFeatureRecord>>asList(Keys.KEY_MISC_FEATURE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MiscFeature as(String alias) {
        return new MiscFeature(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MiscFeature rename(String name) {
        return new MiscFeature(name, null);
    }
}
