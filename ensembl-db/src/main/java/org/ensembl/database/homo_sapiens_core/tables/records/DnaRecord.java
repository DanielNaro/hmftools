/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables.records;


import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.tables.Dna;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DnaRecord extends UpdatableRecordImpl<DnaRecord> implements Record2<UInteger, String> {

    private static final long serialVersionUID = 1178747254;

    /**
     * Setter for <code>homo_sapiens_core_89_37.dna.seq_region_id</code>.
     */
    public void setSeqRegionId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.dna.seq_region_id</code>.
     */
    public UInteger getSeqRegionId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.dna.sequence</code>.
     */
    public void setSequence(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.dna.sequence</code>.
     */
    public String getSequence() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Dna.DNA.SEQ_REGION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Dna.DNA.SEQUENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getSeqRegionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnaRecord value1(UInteger value) {
        setSeqRegionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnaRecord value2(String value) {
        setSequence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DnaRecord values(UInteger value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DnaRecord
     */
    public DnaRecord() {
        super(Dna.DNA);
    }

    /**
     * Create a detached, initialised DnaRecord
     */
    public DnaRecord(UInteger seqRegionId, String sequence) {
        super(Dna.DNA);

        set(0, seqRegionId);
        set(1, sequence);
    }
}
