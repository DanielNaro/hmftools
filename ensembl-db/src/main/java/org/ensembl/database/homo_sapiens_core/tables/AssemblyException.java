/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.enums.AssemblyExceptionExcType;
import org.ensembl.database.homo_sapiens_core.tables.records.AssemblyExceptionRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssemblyException extends TableImpl<AssemblyExceptionRecord> {

    private static final long serialVersionUID = 837652475;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.assembly_exception</code>
     */
    public static final AssemblyException ASSEMBLY_EXCEPTION = new AssemblyException();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssemblyExceptionRecord> getRecordType() {
        return AssemblyExceptionRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.assembly_exception_id</code>.
     */
    public final TableField<AssemblyExceptionRecord, UInteger> ASSEMBLY_EXCEPTION_ID = createField("assembly_exception_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.seq_region_id</code>.
     */
    public final TableField<AssemblyExceptionRecord, UInteger> SEQ_REGION_ID = createField("seq_region_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.seq_region_start</code>.
     */
    public final TableField<AssemblyExceptionRecord, UInteger> SEQ_REGION_START = createField("seq_region_start", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.seq_region_end</code>.
     */
    public final TableField<AssemblyExceptionRecord, UInteger> SEQ_REGION_END = createField("seq_region_end", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.exc_type</code>.
     */
    public final TableField<AssemblyExceptionRecord, AssemblyExceptionExcType> EXC_TYPE = createField("exc_type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.ensembl.database.homo_sapiens_core.enums.AssemblyExceptionExcType.class), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.exc_seq_region_id</code>.
     */
    public final TableField<AssemblyExceptionRecord, UInteger> EXC_SEQ_REGION_ID = createField("exc_seq_region_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.exc_seq_region_start</code>.
     */
    public final TableField<AssemblyExceptionRecord, UInteger> EXC_SEQ_REGION_START = createField("exc_seq_region_start", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.exc_seq_region_end</code>.
     */
    public final TableField<AssemblyExceptionRecord, UInteger> EXC_SEQ_REGION_END = createField("exc_seq_region_end", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.assembly_exception.ori</code>.
     */
    public final TableField<AssemblyExceptionRecord, Integer> ORI = createField("ori", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.assembly_exception</code> table reference
     */
    public AssemblyException() {
        this("assembly_exception", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.assembly_exception</code> table reference
     */
    public AssemblyException(String alias) {
        this(alias, ASSEMBLY_EXCEPTION);
    }

    private AssemblyException(String alias, Table<AssemblyExceptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssemblyException(String alias, Table<AssemblyExceptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssemblyExceptionRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ASSEMBLY_EXCEPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssemblyExceptionRecord> getPrimaryKey() {
        return Keys.KEY_ASSEMBLY_EXCEPTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssemblyExceptionRecord>> getKeys() {
        return Arrays.<UniqueKey<AssemblyExceptionRecord>>asList(Keys.KEY_ASSEMBLY_EXCEPTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssemblyException as(String alias) {
        return new AssemblyException(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AssemblyException rename(String name) {
        return new AssemblyException(name, null);
    }
}
