/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables.records;


import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.tables.AnalysisDescription;
import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalysisDescriptionRecord extends TableRecordImpl<AnalysisDescriptionRecord> implements Record5<UShort, String, String, Byte, String> {

    private static final long serialVersionUID = 1175965141;

    /**
     * Setter for <code>homo_sapiens_core_89_37.analysis_description.analysis_id</code>.
     */
    public void setAnalysisId(UShort value) {
        set(0, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.analysis_description.analysis_id</code>.
     */
    public UShort getAnalysisId() {
        return (UShort) get(0);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.analysis_description.description</code>.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.analysis_description.description</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.analysis_description.display_label</code>.
     */
    public void setDisplayLabel(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.analysis_description.display_label</code>.
     */
    public String getDisplayLabel() {
        return (String) get(2);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.analysis_description.displayable</code>.
     */
    public void setDisplayable(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.analysis_description.displayable</code>.
     */
    public Byte getDisplayable() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.analysis_description.web_data</code>.
     */
    public void setWebData(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.analysis_description.web_data</code>.
     */
    public String getWebData() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UShort, String, String, Byte, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UShort, String, String, Byte, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UShort> field1() {
        return AnalysisDescription.ANALYSIS_DESCRIPTION.ANALYSIS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AnalysisDescription.ANALYSIS_DESCRIPTION.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return AnalysisDescription.ANALYSIS_DESCRIPTION.DISPLAY_LABEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return AnalysisDescription.ANALYSIS_DESCRIPTION.DISPLAYABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return AnalysisDescription.ANALYSIS_DESCRIPTION.WEB_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UShort value1() {
        return getAnalysisId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDisplayLabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getDisplayable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getWebData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisDescriptionRecord value1(UShort value) {
        setAnalysisId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisDescriptionRecord value2(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisDescriptionRecord value3(String value) {
        setDisplayLabel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisDescriptionRecord value4(Byte value) {
        setDisplayable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisDescriptionRecord value5(String value) {
        setWebData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalysisDescriptionRecord values(UShort value1, String value2, String value3, Byte value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnalysisDescriptionRecord
     */
    public AnalysisDescriptionRecord() {
        super(AnalysisDescription.ANALYSIS_DESCRIPTION);
    }

    /**
     * Create a detached, initialised AnalysisDescriptionRecord
     */
    public AnalysisDescriptionRecord(UShort analysisId, String description, String displayLabel, Byte displayable, String webData) {
        super(AnalysisDescription.ANALYSIS_DESCRIPTION);

        set(0, analysisId);
        set(1, description);
        set(2, displayLabel);
        set(3, displayable);
        set(4, webData);
    }
}
