/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.tables.records.AnalysisRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Analysis extends TableImpl<AnalysisRecord> {

    private static final long serialVersionUID = 1350851969;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.analysis</code>
     */
    public static final Analysis ANALYSIS = new Analysis();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnalysisRecord> getRecordType() {
        return AnalysisRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.analysis_id</code>.
     */
    public final TableField<AnalysisRecord, UShort> ANALYSIS_ID = createField("analysis_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.created</code>.
     */
    public final TableField<AnalysisRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.logic_name</code>.
     */
    public final TableField<AnalysisRecord, String> LOGIC_NAME = createField("logic_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.db</code>.
     */
    public final TableField<AnalysisRecord, String> DB = createField("db", org.jooq.impl.SQLDataType.VARCHAR.length(120), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.db_version</code>.
     */
    public final TableField<AnalysisRecord, String> DB_VERSION = createField("db_version", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.db_file</code>.
     */
    public final TableField<AnalysisRecord, String> DB_FILE = createField("db_file", org.jooq.impl.SQLDataType.VARCHAR.length(120), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.program</code>.
     */
    public final TableField<AnalysisRecord, String> PROGRAM = createField("program", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.program_version</code>.
     */
    public final TableField<AnalysisRecord, String> PROGRAM_VERSION = createField("program_version", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.program_file</code>.
     */
    public final TableField<AnalysisRecord, String> PROGRAM_FILE = createField("program_file", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.parameters</code>.
     */
    public final TableField<AnalysisRecord, String> PARAMETERS = createField("parameters", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.module</code>.
     */
    public final TableField<AnalysisRecord, String> MODULE = createField("module", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.module_version</code>.
     */
    public final TableField<AnalysisRecord, String> MODULE_VERSION = createField("module_version", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.gff_source</code>.
     */
    public final TableField<AnalysisRecord, String> GFF_SOURCE = createField("gff_source", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.analysis.gff_feature</code>.
     */
    public final TableField<AnalysisRecord, String> GFF_FEATURE = createField("gff_feature", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.analysis</code> table reference
     */
    public Analysis() {
        this("analysis", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.analysis</code> table reference
     */
    public Analysis(String alias) {
        this(alias, ANALYSIS);
    }

    private Analysis(String alias, Table<AnalysisRecord> aliased) {
        this(alias, aliased, null);
    }

    private Analysis(String alias, Table<AnalysisRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AnalysisRecord, UShort> getIdentity() {
        return Keys.IDENTITY_ANALYSIS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnalysisRecord> getPrimaryKey() {
        return Keys.KEY_ANALYSIS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnalysisRecord>> getKeys() {
        return Arrays.<UniqueKey<AnalysisRecord>>asList(Keys.KEY_ANALYSIS_PRIMARY, Keys.KEY_ANALYSIS_LOGIC_NAME_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Analysis as(String alias) {
        return new Analysis(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Analysis rename(String name) {
        return new Analysis(name, null);
    }
}
