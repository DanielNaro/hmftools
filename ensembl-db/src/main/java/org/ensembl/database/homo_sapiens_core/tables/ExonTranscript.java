/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.tables.records.ExonTranscriptRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExonTranscript extends TableImpl<ExonTranscriptRecord> {

    private static final long serialVersionUID = -296841993;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.exon_transcript</code>
     */
    public static final ExonTranscript EXON_TRANSCRIPT = new ExonTranscript();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExonTranscriptRecord> getRecordType() {
        return ExonTranscriptRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.exon_transcript.exon_id</code>.
     */
    public final TableField<ExonTranscriptRecord, UInteger> EXON_ID = createField("exon_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.exon_transcript.transcript_id</code>.
     */
    public final TableField<ExonTranscriptRecord, UInteger> TRANSCRIPT_ID = createField("transcript_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.exon_transcript.rank</code>.
     */
    public final TableField<ExonTranscriptRecord, Integer> RANK = createField("rank", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.exon_transcript</code> table reference
     */
    public ExonTranscript() {
        this("exon_transcript", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.exon_transcript</code> table reference
     */
    public ExonTranscript(String alias) {
        this(alias, EXON_TRANSCRIPT);
    }

    private ExonTranscript(String alias, Table<ExonTranscriptRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExonTranscript(String alias, Table<ExonTranscriptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ExonTranscriptRecord> getPrimaryKey() {
        return Keys.KEY_EXON_TRANSCRIPT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ExonTranscriptRecord>> getKeys() {
        return Arrays.<UniqueKey<ExonTranscriptRecord>>asList(Keys.KEY_EXON_TRANSCRIPT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExonTranscript as(String alias) {
        return new ExonTranscript(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExonTranscript rename(String name) {
        return new ExonTranscript(name, null);
    }
}
