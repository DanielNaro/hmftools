/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.enums.ObjectXrefEnsemblObjectType;
import org.ensembl.database.homo_sapiens_core.tables.records.ObjectXrefRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ObjectXref extends TableImpl<ObjectXrefRecord> {

    private static final long serialVersionUID = 1035642448;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.object_xref</code>
     */
    public static final ObjectXref OBJECT_XREF = new ObjectXref();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ObjectXrefRecord> getRecordType() {
        return ObjectXrefRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.object_xref.object_xref_id</code>.
     */
    public final TableField<ObjectXrefRecord, UInteger> OBJECT_XREF_ID = createField("object_xref_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.object_xref.ensembl_id</code>.
     */
    public final TableField<ObjectXrefRecord, UInteger> ENSEMBL_ID = createField("ensembl_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.object_xref.ensembl_object_type</code>.
     */
    public final TableField<ObjectXrefRecord, ObjectXrefEnsemblObjectType> ENSEMBL_OBJECT_TYPE = createField("ensembl_object_type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.ensembl.database.homo_sapiens_core.enums.ObjectXrefEnsemblObjectType.class), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.object_xref.xref_id</code>.
     */
    public final TableField<ObjectXrefRecord, UInteger> XREF_ID = createField("xref_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.object_xref.linkage_annotation</code>.
     */
    public final TableField<ObjectXrefRecord, String> LINKAGE_ANNOTATION = createField("linkage_annotation", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.object_xref.analysis_id</code>.
     */
    public final TableField<ObjectXrefRecord, UShort> ANALYSIS_ID = createField("analysis_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.object_xref</code> table reference
     */
    public ObjectXref() {
        this("object_xref", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.object_xref</code> table reference
     */
    public ObjectXref(String alias) {
        this(alias, OBJECT_XREF);
    }

    private ObjectXref(String alias, Table<ObjectXrefRecord> aliased) {
        this(alias, aliased, null);
    }

    private ObjectXref(String alias, Table<ObjectXrefRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ObjectXrefRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_OBJECT_XREF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ObjectXrefRecord> getPrimaryKey() {
        return Keys.KEY_OBJECT_XREF_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ObjectXrefRecord>> getKeys() {
        return Arrays.<UniqueKey<ObjectXrefRecord>>asList(Keys.KEY_OBJECT_XREF_PRIMARY, Keys.KEY_OBJECT_XREF_XREF_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ObjectXref as(String alias) {
        return new ObjectXref(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ObjectXref rename(String name) {
        return new ObjectXref(name, null);
    }
}
