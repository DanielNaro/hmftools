/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.tables.records.SeqRegionSynonymRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeqRegionSynonym extends TableImpl<SeqRegionSynonymRecord> {

    private static final long serialVersionUID = 387897586;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.seq_region_synonym</code>
     */
    public static final SeqRegionSynonym SEQ_REGION_SYNONYM = new SeqRegionSynonym();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeqRegionSynonymRecord> getRecordType() {
        return SeqRegionSynonymRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.seq_region_synonym.seq_region_synonym_id</code>.
     */
    public final TableField<SeqRegionSynonymRecord, UInteger> SEQ_REGION_SYNONYM_ID = createField("seq_region_synonym_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.seq_region_synonym.seq_region_id</code>.
     */
    public final TableField<SeqRegionSynonymRecord, UInteger> SEQ_REGION_ID = createField("seq_region_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.seq_region_synonym.synonym</code>.
     */
    public final TableField<SeqRegionSynonymRecord, String> SYNONYM = createField("synonym", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.seq_region_synonym.external_db_id</code>.
     */
    public final TableField<SeqRegionSynonymRecord, UInteger> EXTERNAL_DB_ID = createField("external_db_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.seq_region_synonym</code> table reference
     */
    public SeqRegionSynonym() {
        this("seq_region_synonym", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.seq_region_synonym</code> table reference
     */
    public SeqRegionSynonym(String alias) {
        this(alias, SEQ_REGION_SYNONYM);
    }

    private SeqRegionSynonym(String alias, Table<SeqRegionSynonymRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeqRegionSynonym(String alias, Table<SeqRegionSynonymRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SeqRegionSynonymRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_SEQ_REGION_SYNONYM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SeqRegionSynonymRecord> getPrimaryKey() {
        return Keys.KEY_SEQ_REGION_SYNONYM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SeqRegionSynonymRecord>> getKeys() {
        return Arrays.<UniqueKey<SeqRegionSynonymRecord>>asList(Keys.KEY_SEQ_REGION_SYNONYM_PRIMARY, Keys.KEY_SEQ_REGION_SYNONYM_SYN_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeqRegionSynonym as(String alias) {
        return new SeqRegionSynonym(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeqRegionSynonym rename(String name) {
        return new SeqRegionSynonym(name, null);
    }
}
