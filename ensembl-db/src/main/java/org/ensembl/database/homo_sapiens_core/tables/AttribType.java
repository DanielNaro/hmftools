/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.tables.records.AttribTypeRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttribType extends TableImpl<AttribTypeRecord> {

    private static final long serialVersionUID = 1274555974;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.attrib_type</code>
     */
    public static final AttribType ATTRIB_TYPE = new AttribType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttribTypeRecord> getRecordType() {
        return AttribTypeRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.attrib_type.attrib_type_id</code>.
     */
    public final TableField<AttribTypeRecord, UShort> ATTRIB_TYPE_ID = createField("attrib_type_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.attrib_type.code</code>.
     */
    public final TableField<AttribTypeRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.attrib_type.name</code>.
     */
    public final TableField<AttribTypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.attrib_type.description</code>.
     */
    public final TableField<AttribTypeRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.attrib_type</code> table reference
     */
    public AttribType() {
        this("attrib_type", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.attrib_type</code> table reference
     */
    public AttribType(String alias) {
        this(alias, ATTRIB_TYPE);
    }

    private AttribType(String alias, Table<AttribTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private AttribType(String alias, Table<AttribTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttribTypeRecord, UShort> getIdentity() {
        return Keys.IDENTITY_ATTRIB_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttribTypeRecord> getPrimaryKey() {
        return Keys.KEY_ATTRIB_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttribTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<AttribTypeRecord>>asList(Keys.KEY_ATTRIB_TYPE_PRIMARY, Keys.KEY_ATTRIB_TYPE_CODE_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttribType as(String alias) {
        return new AttribType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AttribType rename(String name) {
        return new AttribType(name, null);
    }
}
