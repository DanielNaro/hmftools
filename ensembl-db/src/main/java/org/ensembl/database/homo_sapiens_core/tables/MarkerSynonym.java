/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.tables.records.MarkerSynonymRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarkerSynonym extends TableImpl<MarkerSynonymRecord> {

    private static final long serialVersionUID = 1372560997;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.marker_synonym</code>
     */
    public static final MarkerSynonym MARKER_SYNONYM = new MarkerSynonym();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MarkerSynonymRecord> getRecordType() {
        return MarkerSynonymRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.marker_synonym.marker_synonym_id</code>.
     */
    public final TableField<MarkerSynonymRecord, UInteger> MARKER_SYNONYM_ID = createField("marker_synonym_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.marker_synonym.marker_id</code>.
     */
    public final TableField<MarkerSynonymRecord, UInteger> MARKER_ID = createField("marker_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.marker_synonym.source</code>.
     */
    public final TableField<MarkerSynonymRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.marker_synonym.name</code>.
     */
    public final TableField<MarkerSynonymRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.marker_synonym</code> table reference
     */
    public MarkerSynonym() {
        this("marker_synonym", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.marker_synonym</code> table reference
     */
    public MarkerSynonym(String alias) {
        this(alias, MARKER_SYNONYM);
    }

    private MarkerSynonym(String alias, Table<MarkerSynonymRecord> aliased) {
        this(alias, aliased, null);
    }

    private MarkerSynonym(String alias, Table<MarkerSynonymRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MarkerSynonymRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_MARKER_SYNONYM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MarkerSynonymRecord> getPrimaryKey() {
        return Keys.KEY_MARKER_SYNONYM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MarkerSynonymRecord>> getKeys() {
        return Arrays.<UniqueKey<MarkerSynonymRecord>>asList(Keys.KEY_MARKER_SYNONYM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MarkerSynonym as(String alias) {
        return new MarkerSynonym(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MarkerSynonym rename(String name) {
        return new MarkerSynonym(name, null);
    }
}
