/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.HomoSapiensCore_89_37;
import org.ensembl.database.homo_sapiens_core.Keys;
import org.ensembl.database.homo_sapiens_core.tables.records.OperonRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Operon extends TableImpl<OperonRecord> {

    private static final long serialVersionUID = 2003469126;

    /**
     * The reference instance of <code>homo_sapiens_core_89_37.operon</code>
     */
    public static final Operon OPERON = new Operon();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OperonRecord> getRecordType() {
        return OperonRecord.class;
    }

    /**
     * The column <code>homo_sapiens_core_89_37.operon.operon_id</code>.
     */
    public final TableField<OperonRecord, UInteger> OPERON_ID = createField("operon_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.seq_region_id</code>.
     */
    public final TableField<OperonRecord, UInteger> SEQ_REGION_ID = createField("seq_region_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.seq_region_start</code>.
     */
    public final TableField<OperonRecord, UInteger> SEQ_REGION_START = createField("seq_region_start", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.seq_region_end</code>.
     */
    public final TableField<OperonRecord, UInteger> SEQ_REGION_END = createField("seq_region_end", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.seq_region_strand</code>.
     */
    public final TableField<OperonRecord, Byte> SEQ_REGION_STRAND = createField("seq_region_strand", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.display_label</code>.
     */
    public final TableField<OperonRecord, String> DISPLAY_LABEL = createField("display_label", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.analysis_id</code>.
     */
    public final TableField<OperonRecord, UShort> ANALYSIS_ID = createField("analysis_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.stable_id</code>.
     */
    public final TableField<OperonRecord, String> STABLE_ID = createField("stable_id", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.version</code>.
     */
    public final TableField<OperonRecord, UShort> VERSION = createField("version", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.created_date</code>.
     */
    public final TableField<OperonRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>homo_sapiens_core_89_37.operon.modified_date</code>.
     */
    public final TableField<OperonRecord, Timestamp> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>homo_sapiens_core_89_37.operon</code> table reference
     */
    public Operon() {
        this("operon", null);
    }

    /**
     * Create an aliased <code>homo_sapiens_core_89_37.operon</code> table reference
     */
    public Operon(String alias) {
        this(alias, OPERON);
    }

    private Operon(String alias, Table<OperonRecord> aliased) {
        this(alias, aliased, null);
    }

    private Operon(String alias, Table<OperonRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HomoSapiensCore_89_37.HOMO_SAPIENS_CORE_89_37;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OperonRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_OPERON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OperonRecord> getPrimaryKey() {
        return Keys.KEY_OPERON_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OperonRecord>> getKeys() {
        return Arrays.<UniqueKey<OperonRecord>>asList(Keys.KEY_OPERON_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Operon as(String alias) {
        return new Operon(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Operon rename(String name) {
        return new Operon(name, null);
    }
}
