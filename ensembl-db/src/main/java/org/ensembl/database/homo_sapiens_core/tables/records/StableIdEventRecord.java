/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables.records;


import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.enums.StableIdEventType;
import org.ensembl.database.homo_sapiens_core.tables.StableIdEvent;
import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StableIdEventRecord extends TableRecordImpl<StableIdEventRecord> implements Record7<String, Short, String, Short, UInteger, StableIdEventType, Double> {

    private static final long serialVersionUID = -1483014782;

    /**
     * Setter for <code>homo_sapiens_core_89_37.stable_id_event.old_stable_id</code>.
     */
    public void setOldStableId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.stable_id_event.old_stable_id</code>.
     */
    public String getOldStableId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.stable_id_event.old_version</code>.
     */
    public void setOldVersion(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.stable_id_event.old_version</code>.
     */
    public Short getOldVersion() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.stable_id_event.new_stable_id</code>.
     */
    public void setNewStableId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.stable_id_event.new_stable_id</code>.
     */
    public String getNewStableId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.stable_id_event.new_version</code>.
     */
    public void setNewVersion(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.stable_id_event.new_version</code>.
     */
    public Short getNewVersion() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.stable_id_event.mapping_session_id</code>.
     */
    public void setMappingSessionId(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.stable_id_event.mapping_session_id</code>.
     */
    public UInteger getMappingSessionId() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.stable_id_event.type</code>.
     */
    public void setType(StableIdEventType value) {
        set(5, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.stable_id_event.type</code>.
     */
    public StableIdEventType getType() {
        return (StableIdEventType) get(5);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.stable_id_event.score</code>.
     */
    public void setScore(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.stable_id_event.score</code>.
     */
    public Double getScore() {
        return (Double) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, Short, String, Short, UInteger, StableIdEventType, Double> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, Short, String, Short, UInteger, StableIdEventType, Double> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return StableIdEvent.STABLE_ID_EVENT.OLD_STABLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return StableIdEvent.STABLE_ID_EVENT.OLD_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return StableIdEvent.STABLE_ID_EVENT.NEW_STABLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return StableIdEvent.STABLE_ID_EVENT.NEW_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field5() {
        return StableIdEvent.STABLE_ID_EVENT.MAPPING_SESSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<StableIdEventType> field6() {
        return StableIdEvent.STABLE_ID_EVENT.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return StableIdEvent.STABLE_ID_EVENT.SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getOldStableId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getOldVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNewStableId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getNewVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value5() {
        return getMappingSessionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventType value6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventRecord value1(String value) {
        setOldStableId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventRecord value2(Short value) {
        setOldVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventRecord value3(String value) {
        setNewStableId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventRecord value4(Short value) {
        setNewVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventRecord value5(UInteger value) {
        setMappingSessionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventRecord value6(StableIdEventType value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventRecord value7(Double value) {
        setScore(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StableIdEventRecord values(String value1, Short value2, String value3, Short value4, UInteger value5, StableIdEventType value6, Double value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StableIdEventRecord
     */
    public StableIdEventRecord() {
        super(StableIdEvent.STABLE_ID_EVENT);
    }

    /**
     * Create a detached, initialised StableIdEventRecord
     */
    public StableIdEventRecord(String oldStableId, Short oldVersion, String newStableId, Short newVersion, UInteger mappingSessionId, StableIdEventType type, Double score) {
        super(StableIdEvent.STABLE_ID_EVENT);

        set(0, oldStableId);
        set(1, oldVersion);
        set(2, newStableId);
        set(3, newVersion);
        set(4, mappingSessionId);
        set(5, type);
        set(6, score);
    }
}
