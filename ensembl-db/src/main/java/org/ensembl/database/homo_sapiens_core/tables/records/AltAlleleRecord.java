/*
 * This file is generated by jOOQ.
*/
package org.ensembl.database.homo_sapiens_core.tables.records;


import javax.annotation.Generated;

import org.ensembl.database.homo_sapiens_core.tables.AltAllele;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AltAlleleRecord extends UpdatableRecordImpl<AltAlleleRecord> implements Record3<UInteger, UInteger, UInteger> {

    private static final long serialVersionUID = 801538286;

    /**
     * Setter for <code>homo_sapiens_core_89_37.alt_allele.alt_allele_id</code>.
     */
    public void setAltAlleleId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.alt_allele.alt_allele_id</code>.
     */
    public UInteger getAltAlleleId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.alt_allele.alt_allele_group_id</code>.
     */
    public void setAltAlleleGroupId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.alt_allele.alt_allele_group_id</code>.
     */
    public UInteger getAltAlleleGroupId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>homo_sapiens_core_89_37.alt_allele.gene_id</code>.
     */
    public void setGeneId(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>homo_sapiens_core_89_37.alt_allele.gene_id</code>.
     */
    public UInteger getGeneId() {
        return (UInteger) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, UInteger> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, UInteger> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return AltAllele.ALT_ALLELE.ALT_ALLELE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return AltAllele.ALT_ALLELE.ALT_ALLELE_GROUP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field3() {
        return AltAllele.ALT_ALLELE.GENE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getAltAlleleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getAltAlleleGroupId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value3() {
        return getGeneId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AltAlleleRecord value1(UInteger value) {
        setAltAlleleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AltAlleleRecord value2(UInteger value) {
        setAltAlleleGroupId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AltAlleleRecord value3(UInteger value) {
        setGeneId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AltAlleleRecord values(UInteger value1, UInteger value2, UInteger value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AltAlleleRecord
     */
    public AltAlleleRecord() {
        super(AltAllele.ALT_ALLELE);
    }

    /**
     * Create a detached, initialised AltAlleleRecord
     */
    public AltAlleleRecord(UInteger altAlleleId, UInteger altAlleleGroupId, UInteger geneId) {
        super(AltAllele.ALT_ALLELE);

        set(0, altAlleleId);
        set(1, altAlleleGroupId);
        set(2, geneId);
    }
}
